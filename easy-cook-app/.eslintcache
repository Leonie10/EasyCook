[{"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/index.js":"1","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/reportWebVitals.js":"2","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/App.js":"3","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/hoc/Layout/Layout.js":"4","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/hoc/Aux/Aux.js":"5","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/ToolBar/ToolBar.js":"6","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/NavigationItems/NavigationItems.js":"7","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/NavigationItems/NavigationItem/NavigationItem.js":"8","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/Logo/Logo.js":"9","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/container/SearchRecipes/SearchRecipes.js":"10","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/UI/Button/Button.js":"11","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Filter/Filter.js":"12","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/Search.js":"13","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/SearchSuggestions/SearchSuggestions.js":"14","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/SearchBar/SearchBar.js":"15","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Recipes/Recipes.js":"16","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Filter/FilterBar/FilterBar.js":"17","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/Ingredients/Ingredients.js":"18","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Recipes/Recipe/Recipe.js":"19"},{"size":500,"mtime":1612116013651,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1612116013652,"results":"22","hashOfConfig":"21"},{"size":240,"mtime":1612363127958,"results":"23","hashOfConfig":"21"},{"size":285,"mtime":1612285102013,"results":"24","hashOfConfig":"21"},{"size":82,"mtime":1612190944647,"results":"25","hashOfConfig":"21"},{"size":811,"mtime":1614803941198,"results":"26","hashOfConfig":"21"},{"size":444,"mtime":1614802855425,"results":"27","hashOfConfig":"21"},{"size":234,"mtime":1614802858109,"results":"28","hashOfConfig":"21"},{"size":171,"mtime":1614803007928,"results":"29","hashOfConfig":"21"},{"size":4421,"mtime":1614799744932,"results":"30","hashOfConfig":"21"},{"size":373,"mtime":1613053005606,"results":"31","hashOfConfig":"21"},{"size":1101,"mtime":1614615981354,"results":"32","hashOfConfig":"21"},{"size":3403,"mtime":1614801596392,"results":"33","hashOfConfig":"21"},{"size":788,"mtime":1614617070135,"results":"34","hashOfConfig":"21"},{"size":466,"mtime":1614252886027,"results":"35","hashOfConfig":"21"},{"size":1265,"mtime":1614714256290,"results":"36","hashOfConfig":"21"},{"size":4432,"mtime":1614707886903,"results":"37","hashOfConfig":"21"},{"size":734,"mtime":1614244210552,"results":"38","hashOfConfig":"21"},{"size":1574,"mtime":1614714724596,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"561xm6",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/index.js",[],["87","88"],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/reportWebVitals.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/App.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/hoc/Layout/Layout.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/hoc/Aux/Aux.js",["89"],"import React from 'react'\n\nconst Aux = props => props.children\n\nexport default Aux","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/ToolBar/ToolBar.js",["90"],"import React from 'react'\nimport classes from './ToolBar.module.css'\nimport Aux from '../../../hoc/Aux/Aux'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport Logo from '../Logo/Logo'\nimport video from '../../../assets/video.mp4'\n\n\nconst ToolBar = (props) => {\n\n    return <div >\n        <div className={classes.ToolBar}>\n        <Logo/>\n        <NavigationItems/>\n        </div>\n        <p className={classes.Paragraph}>Welcome to EasyCook, a fun way to discover easy recipe and yummy. You just have to search for \n        ingredients you have in your fridge or just you 'd like to use for cooking, enjoy !' </p>\n        \n        <video className={classes.Video} autoPlay loop >\n            <source src={video} type=\"video/mp4\"/>\n        </video>\n    </div>\n    \n}\n\nexport default ToolBar\n","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/NavigationItems/NavigationItems.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/NavigationItems/NavigationItem/NavigationItem.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Navigation/Logo/Logo.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/container/SearchRecipes/SearchRecipes.js",["91"],"import React, { Component } from 'react'\nimport Aux from '../../hoc/Aux/Aux'\nimport Search from '../../component/Search/Search'\nimport classes from './SearchRecipes.module.css'\nimport Recipes from '../../component/Recipes/Recipes'\nimport FilterBar from '../../component/Filter/FilterBar/FilterBar'\n\n\nclass SearchRecipes extends Component{\n\n    state = { \n        ingredientsSearched: null,\n        filterValues: null,\n        recipes: null\n    }\n\n    componentDidUpdate(){\n        \n        if(this.state.ingredientsSearched !== null && this.state.ingredientsSearched.length !== 0){\n            if(!this.state.filterValues){  \n                const maxCalories = '&maxCalories=2000'\n            fetch('https://api.spoonacular.com/recipes/complexSearch?apiKey=04dfcc4fb0bf42fca4548fcd8793f114&number=40&addRecipeInformation=true&instructionsRequired=true&fillIngredients=true&includeIngredients='\n            + this.state.ingredientsSearched + maxCalories)\n            .then(response => response.json())\n            .then(data => {\n                if(this.state.recipes === null){\n\n                    this.setState({recipes: data.results})\n\n                }  else if(this.state.recipes !== null){\n\n                const prevDatas = this.state.recipes.map(recipe => recipe.id).join('')\n                const currDatas = data.results.map(recipe => recipe.id).join('')\n               \n\n                if(prevDatas !== currDatas){\n                    this.setState({recipes: data.results})\n                    }\n                }\n            })\n\n            .catch(err => {\n                console.error(err);\n            });\n\n            }\n\n            if(this.state.filterValues){\n\n               const diet = this.state.filterValues.diet? '&diet=' + this.state.filterValues.diet : ''\n               const type = this.state.filterValues.type? '&type=' + this.state.filterValues.type : ''\n               const maxReadyTime = '&maxReadyTime=' + this.state.filterValues.maxReadyTime\n               const maxCalories = '&maxCalories=' + this.state.filterValues.maxCalories\n               const ingredientExcluded = this.state.filterValues.ingredientExcluded? '&excludeIngredients=' \n               + this.state.filterValues.ingredientExcluded.map(ingredient => { return ingredient.split(' ').join('')}).join() : ''\n            \n               let cuisine\n               const cuisineState = this.state.filterValues.cuisine\n               if(this.state.filterValues.cuisine.length > 0){\n                cuisine = cuisineState.length > 1? '&cuisine=' + cuisineState.join(',') : '&cuisine=' + cuisineState.join('')\n               }else {\n                cuisine = ''\n               }\n\n               const url = 'https://api.spoonacular.com/recipes/complexSearch?apiKey=04dfcc4fb0bf42fca4548fcd8793f114&number=40&addRecipeInformation=true&instructionsRequired=true&fillIngredients=true&includeIngredients=' \n               + this.state.ingredientsSearched + type + diet + cuisine +  maxReadyTime + maxCalories + ingredientExcluded\n               console.log(url)\n               fetch(url)\n               .then(response => response.json())\n               .then(data => {\n                   if(this.state.recipes === null){\n                       this.setState({recipes: data.results})\n                   }  else if(this.state.recipes !== null){\n                   const prevDatas = this.state.recipes.map(recipe => recipe.id).join('')\n                   const currDatas = data.results.map(recipe => recipe.id).join('')\n                   if(prevDatas !== currDatas){\n                       this.setState({recipes: data.results})\n                       }\n                   }\n               })\n               .catch(err => {\n                   console.error(err);\n               });\n\n            } \n            \n        }\n\n\n    }\n\n    getIngredientsSearch = (ingredients) => {\n        this.setState({ingredientsSearched: ingredients})\n    }\n\n    getFilterValues = (values) => {\n        this.setState({filterValues: values})\n    }\n\n   \n    render(){\n        if(this.state.recipes!== null){\n            console.log(this.state.recipes)\n        }\n        return <Aux>\n            <Search ingredientsSearched={this.getIngredientsSearch} mainSearch={true}/>\n            <Recipes recipes={this.state.recipes} />\n            <FilterBar filterValues={this.getFilterValues}/>\n            \n        </Aux>\n    }\n}\n\nexport default SearchRecipes","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/UI/Button/Button.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Filter/Filter.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/Search.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/SearchSuggestions/SearchSuggestions.js",["92"],"import React, { Component } from 'react'\nimport classes from './SearchSuggestions.module.css'\n\n\nconst SearchSuggestions = (props) => {\n\n    \n    let suggestions, hideSuggestionClass\n    \n\n    if(props.inputValue === '' || props.showSuggestion === true){\n        hideSuggestionClass = classes.HideSuggestions\n    }\n\n    if(props.recipeDatas === \" \"){\n    suggestions = <div> no results</div>\n    }\n\n    if(props.recipeDatas !== null){\n        suggestions = props.recipeDatas.map( (ingredient, index) => {\n            return <li key={index} onClick={props.selectedSuggestion.bind(this, ingredient)} >{ingredient}</li>\n\n        })\n    }\n    \n    return <div className={hideSuggestionClass}>\n        <ul>\n            {suggestions}\n        </ul>\n    </div>\n}\n\n\nexport default SearchSuggestions","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/SearchBar/SearchBar.js",[],"/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Recipes/Recipes.js",["93"],"import React, { Component } from 'react'\nimport Recipe from './Recipe/Recipe'\n\n\nconst Recipes = (props) => {\n    \n    let recipes\n    if(props.recipes){\n        const recipe = [...props.recipes]\n        if(props.recipes.length > 1){\n            recipe.shift()\n        }\n        console.log(recipe)\n        \n        recipes = recipe.length > 0? recipe.map((recipe, index) => {\n            const ingredients = [[...recipe.missedIngredients], [...recipe.usedIngredients]]\n            const instructions = recipe.analyzedInstructions.length >= 1? recipe.analyzedInstructions[0].steps : null\n            console.log(recipe.glutenFree)\n            return <Recipe \n            key={index} \n            title={recipe.title} \n            image={recipe.image}\n            cuisines={recipe.cuisines}\n            calories={recipe.nutrition !== undefined ? recipe.nutrition.nutrients[0].amount : null}\n            readyTime={recipe.readyInMinutes}\n            instructions={instructions}\n            ingredients={ingredients}\n            glutenFree={recipe.glutenFree}\n            />\n        }) : <p>No Results</p>\n        \n    }\n    return <div>\n\n        <div>\n            <h1>Recipes</h1>\n            {recipes}\n\n        </div>\n        \n    </div>\n\n}\n\n\nexport default Recipes\n\n","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Filter/FilterBar/FilterBar.js",["94","95","96"],"import React, { Component } from 'react'\nimport SearchSuggestions from '../../Search/SearchSuggestions/SearchSuggestions'\nimport Search from '../../Search/Search'\nimport searchClass from '../../Search/Search.module.css'\nimport suggestionsClass from '../../Search/SearchSuggestions/SearchSuggestions.module.css'\nimport Button from '../../UI/Button/Button'\nimport classeBtn from '../../UI/Button/Button.module.css'\nimport Filter from '../Filter'\n\n\nclass FilterBar extends Component {\n\n    state = {\n        type: null,\n        diet: null,\n        cuisine: [],\n        maxReadyTime: 40,\n        maxCalories: 600,\n        ingredientExcluded: null\n    }\n\n    typeOnChangeHandler = (e) => {\n        let type = this.state.type === e.target.value? null : e.target.value\n        this.setState({type: type})\n    }\n\n\n    dietOnChangeHandler = (e) => {\n        let diet = this.state.diet === e.target.value? null : e.target.value\n        this.setState({diet: diet})\n    }\n\n    cuisineAddButtonHandler = (value) => {\n        return this.state.cuisine.find(cuisine => cuisine === value) === value? true : false\n    }\n\n    cuisineOnChangeHandler = (e) => {\n        \n        let cuisine = this.state.cuisine.length > 0? \n\n        (this.state.cuisine.includes(e.target.value)? \n        this.state.cuisine.filter(cuisine => cuisine !== e.target.value) \n        : [...this.state.cuisine, e.target.value] )\n\n        : [e.target.value]\n        \n        this.setState({cuisine: cuisine})\n    }\n\n\n    ingredientExcludedHandler = (ingredient) => {\n        this.setState({ingredientExcluded: ingredient })\n    }\n\n    maxReadyTimeChangeHandler = (e) => {\n        this.setState({maxReadyTime: e.target.value})\n    }\n\n    maxCaloriesChangeHandler = (e) => {\n        this.setState({maxCalories: e.target.value})\n    }    \n    \n    submitFilterToSearchRecipesHandler = (e) => {\n        e.preventDefault()\n\n        let filterValue = {\n            type: this.state.type,\n            diet: this.state.diet,\n            cuisine: this.state.cuisine,\n            maxReadyTime: this.state.maxReadyTime,\n            maxCalories: this.state.maxCalories,\n            ingredientExcluded: this.state.ingredientExcluded,\n        }\n        this.props.filterValues(filterValue)\n        \n    }\n\n       \n    \n\n    render() {\n        console.log(this.state.ingredientExcluded)\n        return <div>\n                        <h1>Filter</h1>\n                        <div>\n                            <h2>Type </h2>\n                            <Filter filter=\"types\" filterHandler={this.typeOnChangeHandler} filterState={this.state.type} /> \n                        </div>\n\n\n                        <div>\n                            <h2>Diet</h2>\n                            <Filter filter=\"diets\" filterHandler={this.dietOnChangeHandler} filterState={this.state.diet} />\n                        </div>\n\n\n                        <div>\n                            <h2>Cuisine </h2>\n                            <Filter filter=\"cuisines\" filterHandler={this.cuisineOnChangeHandler} filterState={this.cuisineAddButtonHandler}/>\n                        </div>\n\n                        <div>\n                            <h2>Max Ready Time </h2>\n                            <input type=\"range\" min=\"10\" max=\"400\" step=\"10\" value={this.state.maxReadyTime}  onChange={this.maxReadyTimeChangeHandler}/>\n                            <div>{this.state.maxReadyTime}min</div>\n                            \n                        </div>\n\n                        <div>\n                            <h2>Max Calories</h2>\n                            <input type=\"range\" min=\"100\" max=\"6000\" step=\"100\" value={this.state.maxCalories}  onChange={this.maxCaloriesChangeHandler}/>\n                            <div>{this.state.maxCalories}Kcal</div>\n                        </div>\n\n                        <div>\n                            <h2>Ingredients Excluded</h2>\n                            <Search \n                            searchBarClass={searchClass.Search}\n                            suggestionsClass={suggestionsClass.SearchSuggestions}\n                            ingredientsSearched={this.ingredientExcludedHandler}\n                            mainSearch={false} />\n                        </div>\n\n                        <button type=\"submit\" onClick={this.submitFilterToSearchRecipesHandler}>Save</button>\n                    \n            </div>\n        }\n    \n}\n\nexport default FilterBar\n\n","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Search/Ingredients/Ingredients.js",["97"],"import React, { Component } from 'react'\n\n\nconst Ingredients = (props) => {\n\n    const removeIngredientsHandler = (e) => {\n        props.removeIngredients(e.target.parentElement.firstElementChild.innerHTML)\n    }\n    let ingredients\n\n        if(props.ingredientsSearched !== null){\n\n            ingredients = props.ingredientsSearched\n            .map(ingredient => {\n                return <div key={ingredient}>\n                            <li >{ingredient}</li>\n                            <button>x</button>\n                        </div>\n            })\n\n        } else {\n\n            ingredients = null\n        }\n\n\n    return <ul onClick={removeIngredientsHandler}>\n        {ingredients}\n    </ul>\n\n}\n\n\nexport default Ingredients","/Users/leoniegauthier/Documents/Programmation/easy-cook-app/src/component/Recipes/Recipe/Recipe.js",["98","99"],"import React, { Component } from 'react'\n\nconst Recipe = (props) => {\n\n    const image = props.image !== null? <img src={props.image}/> : null\n\n    const cuisines = props.cuisines.length > 0 ? props.cuisines.map((cuisine,index) => {\n        return <p key={index}>{cuisine}</p>\n    }) : null\n\n    const calories = props.calories !== null ? <p>{props.calories.toFixed(0)} Kcal</p> : null\n\n    const readyTime = props.readyTime !== null? <p>Ready in {props.readyTime} min</p> : null\n\n    const instructions = props.instructions !== null ?  <div>\n    <h3>Instructions</h3>\n    {props.instructions.map((instruction, index) => {\n        return <p key={index}>{instruction.step}</p>\n    })}\n   </div>  : null\n\n  \n    const missedIngredients = props.ingredients[0].map((ingredient,index) => {\n        return <div key={index}>\n            <p>{ingredient.originalString}</p>\n        </div>\n    })\n    const usedIngredients = props.ingredients[1].map((ingredient,index) => {\n        return <div key={index}>\n            <p>{ingredient.amount + ' ' + ingredient.unit + ' ' + ingredient.name}</p>\n        </div>\n    })\n\n\n    const glutenFree = props.glutenFree === true? <p>Gluten Free</p> : null\n\n\n    \n    \n    return (<div>\n            <h2>{props.title}</h2>\n            {image}\n            {cuisines}\n            {calories}\n            {readyTime}\n            {glutenFree}\n            <div>\n                <h3>Ingredients</h3>\n                {missedIngredients}\n                {usedIngredients}\n\n            </div>\n            {instructions}\n    </div>)\n}\n\nexport default Recipe\n\n",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":11},{"ruleId":"104","severity":1,"message":"109","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":15},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"111","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"112","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":14},{"ruleId":"104","severity":1,"message":"113","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":17},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"110","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":5,"column":41,"nodeType":"116","endLine":5,"endColumn":65},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'Aux' is defined but never used.","'classes' is defined but never used.","'Component' is defined but never used.","'SearchSuggestions' is defined but never used.","'Button' is defined but never used.","'classeBtn' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]